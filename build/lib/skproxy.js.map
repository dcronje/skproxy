{"version":3,"sources":["../../src/lib/skproxy.js"],"names":["_","jsonVal","validate","SkProxy","port","listeningPort","proxies","server","schemaDir","resolve","__dirname","reject","createServer","req","res","proxy","find","proxyItem","reqUri","headers","host","split","listen","web","responseObject","JSON","stringify","success","message","data","writeHead","length","write","end","console","log","yellow","on","socket","head","ws","blue","jsonConf","Object","Error","proxyConf","schemaFile","schema","parse","readFileSync","errors","errorString","e","stack","each","loadProxy","then","catch","target","undefined","parseInt","createProxyServer","error","url","proxyRes","push","process","exit"],"mappings":"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","file":"skproxy.js","sourcesContent":["import http from 'http';\nimport httpProxy from 'http-proxy';\nimport path from 'path';\nimport fs from 'fs';\nimport jsonSchema from 'jsonschema';\nimport * as _ from 'underscore';\nimport Promise from 'bluebird';\nimport chalk from 'chalk';\n\nlet jsonVal = jsonSchema.validate;\n\n//TODO: add target to proxy (get rid of proxy.proxy.options.target.host) object manually assign target proxy server and set up try catch / on error\nclass SkProxy {\n\n\tlisteningPort = null;\n\tproxies = [];\n\tserver = null;\n\tschemaDir = '';\n\n\tconstructor(port = 80) {\n\t\tthis.listeningPort = port;\n\t\tthis.schemaDir = path.resolve(__dirname, '../../', 'schema');\n\t}\n\n\tstartServer() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.server = http.createServer((req ,res) => {\n\t\t\t\tvar proxy = _.find(this.proxies, (proxyItem) => {\n\t\t\t\t\tvar reqUri = req.headers.host.split(':')[0];\n\t\t\t\t\treturn proxyItem.listen.host == reqUri;\n\t\t\t\t});\n\t\t\t\tif (proxy) {\n\t\t\t\t\tproxy.proxy.web(req, res);\n\t\t\t\t} else {\n\t\t\t\t\tvar responseObject = JSON.stringify({\n\t\t\t\t\t\tsuccess: false,\n\t\t\t\t\t\tmessage: 'Api/Site not found',\n\t\t\t\t\t\tdata: false\n\t\t\t\t\t});\n\t\t\t\t\tres.writeHead(404, {\n\t\t\t\t\t\t'Content-Length': responseObject.length,\n\t\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t\t});\n\t\t\t\t\tres.write(responseObject);\n\t\t\t\t\tres.end();\n\t\t\t\t\tconsole.log(chalk.yellow('[WARNING]')+' Unable to proxy: '+req.headers.host+':'+this.listeningPort);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.server.on('upgrade', (req, socket, head) => {\n\t\t\t\tvar proxy = _.find(this.proxies, (proxyItem) => {\n\t\t\t\t\tvar reqUri = req.headers.host.split(':')[0];\n\t\t\t\t\treturn proxyItem.listen.host == reqUri;\n\t\t\t\t});\n\t\t\t\tif (proxy) {\n\t\t\t\t\tproxy.proxy.ws(req, socket, head);\n\t\t\t\t} else {\n\t\t\t\t\tvar responseObject = JSON.stringify({\n\t\t\t\t\t\tsuccess: false,\n\t\t\t\t\t\tmessage: 'Api/Site not found',\n\t\t\t\t\t\tdata: false\n\t\t\t\t\t});\n\t\t\t\t\tres.writeHead(404, {\n\t\t\t\t\t\t'Content-Length': responseObject.length,\n\t\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t\t});\n\t\t\t\t\tres.write(responseObject);\n\t\t\t\t\tres.end();\n\t\t\t\t\tconsole.log(chalk.yellow('[WARNING]')+' Unable to proxy: '+req.headers.host+':'+this.listeningPort+' (socket)');\n\t\t\t\t}\n\t\t\t});\n\t\t\tconsole.log(chalk.blue('[MESSAGE]')+' Starting proxy server on port: '+this.listeningPort);\n\t\t\tthis.server.listen(this.listeningPort);\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tloadConfig(jsonConf) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (!jsonConf || !jsonConf instanceof Object) {\n\t\t\t\treturn reject(new Error('Missing config object'));\n\t\t\t}\n\t\t\tvar proxyConf = jsonConf;\n\t\t\tvar schemaFile = path.resolve(this.schemaDir, './configSchema.json');\n\t\t\tvar schema = JSON.parse(fs.readFileSync(schemaFile, 'utf-8'));\n\t\t\tvar errors = jsonVal(proxyConf, schema).errors;\n\t\t\tif (errors.length) {\n\t\t\t\tvar errorString = 'Invalid json object, the following errors were found in your json object: ';\n\t\t\t\tfor (var e = 0; e < errors.length; e ++) {\n\t\t\t\t\terrorString += '('+(e + 1)+'): '+errors[e].stack+' ';\n\t\t\t\t}\n\t\t\t\treturn reject(new Error(errorString));\n\t\t\t}\n\t\t\tPromise.each(proxyConf.proxies, (proxy) => {\n\t\t\t\treturn this.loadProxy(proxy);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tresolve();\n\t\t\t})\n\t\t\t.catch(reject);\n\t\t});\n\t}\n\n\tloadProxy(proxyConf) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (proxyConf.target.port === undefined || proxyConf.target.port == null || parseInt(proxyConf.target.port) < 80) {\n\t\t\t\tproxyConf.target.port = 80;\n\t\t\t}\n\t\t\tif (proxyConf.listen.port === undefined || proxyConf.listen.port == null || parseInt(proxyConf.listen.port) < 80) {\n\t\t\t\tproxyConf.listen.port = this.listeningPort;\n\t\t\t}\n\t\t\tvar proxy = new httpProxy.createProxyServer({\n\t\t\t\ttarget: {\n\t\t\t\t\thost: proxyConf.target.host,\n\t\t\t\t\tport: proxyConf.target.port\n\t\t\t\t}\n\t\t\t});\n\t\t\tproxy.on('error', (error, req, res) => {\n\t\t\t\tvar responseObject = JSON.stringify({\n\t\t\t\t\tsuccess: false,\n\t\t\t\t\tmessage: error,\n\t\t\t\t\tdata: false\n\t\t\t\t});\n\t\t\t\tres.writeHead(404, {\n\t\t\t\t\t'Content-Length': responseObject.length,\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t});\n\t\t\t\tres.write(responseObject);\n\t\t\t\tres.end();\n\t\t\t\tconsole.log(error.message+': '+proxyConf.listen.host+':'+proxyConf.listen.port+req.url+' >>> '+proxyConf.target.host+':'+proxyConf.target.port+req.url)\n\t\t\t});\n\t\t\tproxy.on('proxyRes', (proxyRes, req, res) => {\n\t\t\t\tconsole.log(chalk.blue('[MESSAGE]')+' Proxied: '+proxyConf.listen.host+':'+proxyConf.listen.port+req.url+' >>> '+proxyConf.target.host+':'+proxyConf.target.port+req.url)\n\t\t\t});\n\t\t\tvar proxyItem = {\n\t\t\t\tproxy: proxy,\n\t\t\t\tlisten: proxyConf.listen,\n\t\t\t\ttarget: proxyConf.target\n\t\t\t};\n\t\t\tthis.proxies.push(proxyItem);\n\t\t\tconsole.log(chalk.blue('[MESSAGE]')+' Started proxy: '+proxyConf.listen.host+':'+proxyConf.listen.port+' >>> '+proxyConf.target.host+':'+proxyConf.target.port);\n\t\t\tresolve();\n\t\t});\n\t}\n}\n\nprocess.on('SIGINT', () => {\n\tconsole.log(\"\\n\");\n\tconsole.log(chalk.yellow('[WARNING]')+' Stopping proxy server on port: '+proxy.listeningPort, () => {\n\t\tprocess.exit(0);\n\t});\n});\n\nexport default SkProxy;\n"]}