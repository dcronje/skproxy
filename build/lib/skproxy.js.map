{"version":3,"sources":["../../src/lib/skproxy.js"],"names":[],"mappings":"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","file":"skproxy.js","sourcesContent":["import http from 'http';\nimport httpProxy from 'http-proxy';\nimport path from 'path';\nimport fs from 'fs';\nimport jsonSchema from 'jsonschema';\nimport * as _ from 'underscore';\nimport Promise from 'bluebird';\nimport chalk from 'chalk';\n\nlet jsonVal = jsonSchema.validate;\n\n//TODO: add target to proxy (get rid of proxy.proxy.options.target.host) object manually assign target proxy server and set up try catch / on error\nclass SkProxy {\n\n  listeningPort = null;\n  proxies = [];\n  server = null;\n  schemaDir = '';\n  configDir = false;\n\n  constructor(port = 80) {\n    this.listeningPort = port;\n    this.schemaDir = path.resolve(__dirname, '../../', 'schema');\n  }\n\n  start() {\n    if (this.configDir) {\n      this.loadConfigDirectory()\n      .then(() => {\n        this.startServer();\n      })\n      .catch((err) => {\n        console.log(err.stack);\n      })\n    } else {\n      this.startServer();\n    }\n  }\n\n  startServer() {\n    return new Promise((resolve, reject) => {\n      this.server = http.createServer((req ,res) => {\n        var proxy = _.find(this.proxies, (proxyItem) => {\n          var reqUri = req.headers.host.split(':')[0];\n          return proxyItem.listen.host == reqUri;\n        });\n        if (proxy) {\n          proxy.proxy.web(req, res);\n        } else {\n          var responseObject = JSON.stringify({\n            success: false,\n            message: 'Api/Site not found',\n            data: false\n          });\n          res.writeHead(404, {\n            'Content-Length': responseObject.length,\n            'Content-Type': 'application/json'\n          });\n          res.write(responseObject);\n          res.end();\n          console.log(`${chalk.yellow('[WARNING]')} Unable to proxy: ${req.headers.host}:${this.listeningPort}`);\n        }\n      });\n      this.server.on('upgrade', (req, socket, head) => {\n        var proxy = _.find(this.proxies, (proxyItem) => {\n          var reqUri = req.headers.host.split(':')[0];\n          return proxyItem.listen.host == reqUri;\n        });\n        if (proxy) {\n          proxy.proxy.ws(req, socket, head);\n        } else {\n          var responseObject = JSON.stringify({\n            success: false,\n            message: 'Api/Site not found',\n            data: false\n          });\n          res.writeHead(404, {\n            'Content-Length': responseObject.length,\n            'Content-Type': 'application/json'\n          });\n          res.write(responseObject);\n          res.end();\n          console.log(`${chalk.yellow('[WARNING]')} Unable to proxy: ${req.headers.host}:${this.listeningPort} (socket)`);\n        }\n      });\n      console.log(`${chalk.blue('[MESSAGE]')} Starting proxy server on port: ${this.listeningPort}`);\n      this.server.listen(this.listeningPort);\n      resolve();\n    });\n  }\n\n  reloadServer() {\n    return new Promise((resolve, reject) => {\n      _.each(this.proxies, (proxyService) => {\n        proxyService.proxy.close();\n        console.log(`${chalk.blue('[MESSAGE]')} Stopped proxy: ${proxyService.listen.host}:${proxyService.listen.port} >>> ${proxyService.target.host}:${proxyService.target.port}`);\n      });\n      this.proxies = [];\n      this.loadConfigDirectory()\n      .then((proxies) => {\n        _.each(proxies, (proxy) => {\n          this.loadProxy(proxy);\n        })\n      })\n    })\n  }\n\n  setConfiDirectory(directory) {\n    this.configDir = directory;\n  }\n\n  loadConfigDirectory() {\n    return new Promise((resolve, reject) => {\n      this.readConfigDirectory()\n      .then((proxies) => {\n        return this.loadConfig({\n          proxies: proxies\n        })\n      })\n      .then(() => {\n        // fs.watch(this.configDir, {encoding: 'utf-8'}, (eventType, filename) => {\n        //   console.log(filename, eventType);\n        //   this.reloadServer();\n        // });\n        resolve();\n      })\n      .catch(reject);\n    });\n  }\n\n  readConfigDirectory() {\n    return new Promise((resolve, reject) => {\n      let proxies = [];\n      fs.readdir(this.configDir, (err, files) => {\n        Promise.each(files, (file) => {\n          return new Promise((resolve, reject) => {\n            let filePath = path.join(this.configDir, file);\n            this.validateConfigFile(filePath)\n            .then((fileData) => {\n              if (fileData) {\n                fileData.file = file;\n                proxies.push(fileData);\n              }\n              resolve();\n            })\n            .catch(reject);\n          })\n        })\n        .then(() => {\n          console.log(proxies);\n          resolve(proxies);\n        })\n        .catch(reject);\n      })\n    });\n  }\n\n  validateConfigFile(file) {\n    return new Promise((resolve, reject) => {\n      if (file.indexOf('.json') == -1) {\n        return resolve(false);\n      }\n      fs.stat(file, (err, stats) => {\n        if (err) {\n          reject(err);\n        };\n        if (stats.isFile()) {\n          this.readFile(file)\n          .then((fileData) => {\n            resolve(fileData);\n          })\n          .catch((err) => {\n            console.log(`${chalk.red('[ ERROR ]')}: Invalid proxy config ${file}`);\n            resolve(false);\n          })\n        } else {\n          return resolve(false);\n        }\n      });\n    })\n  }\n\n  readFile(file) {\n    return new Promise((resolve, reject) => {\n      fs.readFile(file, 'utf-8', (err, fileData) => {\n        if (err) {\n          return reject(err);\n        }\n        try {\n          let jsonFileData = JSON.parse(fileData);\n          resolve(jsonFileData);\n        } catch (e) {\n          return reject(e);\n        }\n      })\n    })\n  }\n\n  loadConfig(jsonConf) {\n    return new Promise((resolve, reject) => {\n      if (!jsonConf || !jsonConf instanceof Object) {\n        return reject(new Error('Missing config object'));\n      }\n      var proxyConf = jsonConf;\n      var schemaFile = path.resolve(this.schemaDir, './configSchema.json');\n      var schema = JSON.parse(fs.readFileSync(schemaFile, 'utf-8'));\n      var errors = jsonVal(proxyConf, schema).errors;\n      if (errors.length) {\n        var errorString = 'Invalid json object, the following errors were found in your json object: ';\n        for (var e = 0; e < errors.length; e ++) {\n          errorString += '('+(e + 1)+'): '+errors[e].stack+' ';\n        }\n        return reject(new Error(errorString));\n      }\n      Promise.each(proxyConf.proxies, (proxy) => {\n        return this.loadProxy(proxy);\n      })\n      .then(() => {\n        resolve();\n      })\n      .catch(reject);\n    });\n  }\n\n  loadProxy(proxyConf) {\n    return new Promise((resolve, reject) => {\n      if (proxyConf.target.port === undefined || proxyConf.target.port == null || parseInt(proxyConf.target.port) < 80) {\n        proxyConf.target.port = 80;\n      }\n      if (proxyConf.listen.port === undefined || proxyConf.listen.port == null || parseInt(proxyConf.listen.port) < 80) {\n        proxyConf.listen.port = this.listeningPort;\n      }\n      var proxy = new httpProxy.createProxyServer({\n        target: {\n          host: proxyConf.target.host,\n          port: proxyConf.target.port\n        }\n      });\n      proxy.on('error', (error, req, res) => {\n        var responseObject = JSON.stringify({\n          success: false,\n          message: error,\n          data: false\n        });\n        res.writeHead(404, {\n          'Content-Length': responseObject.length,\n          'Content-Type': 'application/json'\n        });\n        res.write(responseObject);\n        res.end();\n        console.log(`${chalk.red('[ ERROR ]')}: ${proxyConf.listen.host}:${proxyConf.listen.port+req.url} >>> ${proxyConf.target.host}:${proxyConf.target.port+req.url}`)\n      });\n      proxy.on('proxyRes', (proxyRes, req, res) => {\n        console.log(`${chalk.blue('[MESSAGE]')} Proxied: ${proxyConf.listen.host}:${proxyConf.listen.port+req.url} >>> ${proxyConf.target.host}:${proxyConf.target.port+req.url}`)\n      });\n      var proxyItem = {\n        proxy: proxy,\n        listen: proxyConf.listen,\n        target: proxyConf.target,\n        file: proxyConf.file\n      };\n      this.proxies.push(proxyItem);\n      console.log(`${chalk.blue('[MESSAGE]')} Started proxy: ${proxyConf.listen.host}:${proxyConf.listen.port} >>> ${proxyConf.target.host}:${proxyConf.target.port}`);\n      resolve();\n    });\n  }\n}\n\nprocess.on('SIGINT', () => {\n  console.log(\"\\n\");\n  console.log(`${chalk.yellow('[WARNING]')} Stopping proxy server on port: ${proxy.listeningPort}`, () => {\n    process.exit(0);\n  });\n});\n\nexport default SkProxy;\n"]}